{"version":3,"sources":["components/birthday/Birthday.js","components/employees/Employees.js","redux/actions/actions.js","redux/actions/actionsOperation.js","components/app/App.js","redux/reducers/reducer.js","redux/store.js","index.js"],"names":["shortid","require","Birthday","list","unique","map","elem","Date","dob","getMonth","filter","v","i","a","indexOf","month","className","length","find","el","idx","item","lastName","firstName","Employees","onUsers","onHandleChange","users","uppercaseAlphabet","Array","fill","_","index","String","fromCharCode","some","startsWith","_elem","type","id","name","checked","selected","onChange","Type","axios","usersfetchData","url","dispatch","get","then","res","payload","usersFetchDataSuccess","data","catch","error","usersFetchDataError","App","this","props","fetchData","handleChangeSelected","state","listBirthday","Component","connect","actionOperation","e","target","changeSelected","initialState","loading","store","createStore","newList","newArr","localStorage","getItem","undefined","JSON","parse","flag","newListBirthday","newUsers","setItem","stringify","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da00f523.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Birthday.css\";\r\nconst shortid = require(\"shortid\");\r\n\r\nconst Birthday = ({ list }) => {\r\n  const arrMonth = list.map((elem) => new Date(elem.dob).getMonth());\r\n  let unique = arrMonth.filter((v, i, a) => a.indexOf(v) === i);\r\n  const month = [\r\n    \"December\",\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"November\",\r\n  ];\r\n  return (\r\n    <div className=\"block-birthday\">\r\n      <h1>Employees birthday</h1>\r\n      {list.length !== 0 ? (\r\n        <ul>\r\n          {unique.map((elem) => {\r\n            return (\r\n              <li key={shortid()}>\r\n                <span>\r\n                  <b>{month.find((el, idx) => idx === elem)}</b>\r\n                </span>\r\n                <ul>\r\n                  {list.map((item) => {\r\n                    return (\r\n                      elem === new Date(item.dob).getMonth() && (\r\n                        <li key={shortid()}>\r\n                          <span>\r\n                            {item.lastName} {item.firstName}\r\n                          </span>\r\n                        </li>\r\n                      )\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <div>No selected employees</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Birthday;\r\n","import React from \"react\";\r\nimport \"./Empoyees.css\";\r\nconst shortid = require(\"shortid\");\r\n\r\nconst Employees = ({ onUsers, onHandleChange }) => {\r\n  const { users } = onUsers;\r\n\r\n  const uppercaseAlphabet = new Array(26)\r\n    .fill(1)\r\n    .map((_, index) => String.fromCharCode(65 + index));\r\n  return (\r\n    <div>\r\n      <h1>Employees</h1>\r\n      <ul className=\"block-users\">\r\n        {uppercaseAlphabet.map((elem) => {\r\n          return (\r\n            <li key={shortid()} className=\"block-users__item\">\r\n              <span>\r\n                <b>{elem}</b>\r\n              </span>\r\n              {users.some((el) => el.lastName.startsWith(elem)) ? (\r\n                <ul className=\"users\">\r\n                  {users.map((_elem, idx) => {\r\n                    return (\r\n                      _elem.lastName.startsWith(elem) && (\r\n                        <li key={_elem.id} className=\"users-item\">\r\n                          <span>\r\n                            {_elem.firstName} {_elem.lastName}\r\n                          </span>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            id={_elem.id}\r\n                            name={`selected${idx}`}\r\n                            checked={_elem.selected}\r\n                            onChange={onHandleChange}\r\n                          />\r\n                        </li>\r\n                      )\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                <ul>\r\n                  <li>\r\n                    <span>----</span>\r\n                  </li>\r\n                </ul>\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","export const Type = {\r\n  USERS_FETCH_DATA_REQUEST: \"USERS_FETCH_DATA_REQUEST\",\r\n  USERS_FETCH_DATA_SUCCES: \"USERS_FETCH_DATA_SUCCES\",\r\n  USERS_FETCH_DATA_ERROR: \"USERS_FETCH_DATA_ERROR\",\r\n  CHANGE_SELECTED:\"CHANGE_SELECTED\",\r\n  \r\n};\r\n\r\nexport const changeSelected = (e) => ({\r\n  type: Type.CHANGE_SELECTED,\r\n  payload: { item: e.target },\r\n});\r\n\r\nexport const usersFetchDataRequest = () => ({\r\n  type: Type.USERS_FETCH_DATA_REQUEST,\r\n});\r\nexport const usersFetchDataSuccess = (res) => ({\r\n  type: Type.USERS_FETCH_DATA_SUCCES,\r\n  payload: { users: res },\r\n});\r\nexport const usersFetchDataError = (error) => ({\r\n  type: Type.USERS_FETCH_DATA_ERROR,\r\n  payload: { error },\r\n});\r\n","import {\r\n  usersFetchDataSuccess,\r\n  usersFetchDataError,\r\n  usersFetchDataRequest,\r\n} from \"./actions\";\r\nconst axios = require(\"axios\");\r\n\r\nexport const usersfetchData = (url) => {\r\n  return (dispatch) => {\r\n    dispatch(usersFetchDataRequest());\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        dispatch(usersFetchDataSuccess(res.data));\r\n      })\r\n      .catch((error) => dispatch(usersFetchDataError(error)));\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\nimport Birthday from \"../birthday/Birthday\";\nimport Employees from \"../employees/Employees\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport { changeSelected } from \"../../redux/actions/actions\";\nimport * as actionOperation from \"../../redux/actions/actionsOperation\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchData(\n      `https://yalantis-react-school-api.yalantis.com/api/task0/users`\n    );\n  }\n\n  render() {\n    const { handleChangeSelected } = this.props;\n    return (\n      <div className=\"wrapper\">\n        <Employees\n          onUsers={this.props.state}\n          onHandleChange={handleChangeSelected}\n        />\n        <Birthday list={this.props.state.listBirthday}/>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    state,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchData: (url) => dispatch(actionOperation.usersfetchData(url)),\n    handleChangeSelected: (e) => dispatch(changeSelected(e)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { Type } from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  listBirthday: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\nexport const reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case Type.USERS_FETCH_DATA_REQUEST:\r\n      return { ...state, loading: true, error: null };\r\n    case Type.USERS_FETCH_DATA_SUCCES:\r\n      let newList = [];\r\n      let newArr = localStorage.getItem(\"listB\");\r\n      if (newArr !== undefined && newArr !== null) {\r\n        newList = JSON.parse(newArr);\r\n      }\r\n      const users = payload.users.map((elem) => {\r\n        let flag = !!newList.find((el) => el.id === elem.id);\r\n        return { ...elem, selected: flag };\r\n      });\r\n      return {\r\n        ...state,\r\n        users: users,\r\n        loading: false,\r\n        error: null,\r\n        listBirthday: newList,\r\n      };\r\n    case Type.USERS_FETCH_DATA_ERROR:\r\n      return { ...state, loading: false, error: payload.error };\r\n\r\n    case Type.CHANGE_SELECTED:\r\n      const { checked, id } = payload.item;\r\n      let newListBirthday;\r\n      let newUsers = [...state.users];\r\n      newUsers.find((elem) =>\r\n        elem.id === id ? (elem.selected = checked) : false\r\n      );\r\n      newListBirthday = newUsers.filter((elem) => elem.selected === true);\r\n      localStorage.setItem(\"listB\", JSON.stringify(newListBirthday));\r\n      return { ...state, users: newUsers, listBirthday: [...newListBirthday] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducer } from \"./reducers/reducer\";\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app/App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}